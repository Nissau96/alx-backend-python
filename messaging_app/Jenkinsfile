pipeline {
    agent any  // Run on any available agent

    environment {
        // Define Python version; ShiningPanda will handle installation if needed
        PYTHON_VERSION = '3.13.3'  // Matches the project's Python env
    }

    stages {
        stage('Checkout') {
            steps {
                // Pull from GitHub using credentials
                git url: 'https://github.com/Nissau96/alx-backend-python.git', 
                    branch: 'main',  // Adjust to your branch if needed
                    credentialsId: 'github-creds'
            }
        }

        stage('Set Up Virtual Environment') {
            steps {
                dir('messaging_app') {
                    // Use ShiningPanda to create and activate virtualenv
                    sh "python -m venv venv"
                    sh ". venv/bin/activate && pip install --upgrade pip"
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('messaging_app') {
                    sh ". venv/bin/activate && pip install -r requirements.txt"
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    // Run pytest with JUnit XML report for Jenkins integration
                    sh ". venv/bin/activate && pytest --junitxml=test_report.xml"
                }
            }
        }
    }

    post {
        always {
            // Archive the test report regardless of success/failure
            junit 'messaging_app/test_report.xml'
            // Clean up workspace to avoid bloat (industry best practice)
            cleanWs()
        }
        success {
            echo 'Tests passed successfully!'
        }
        failure {
            echo 'Tests failed. Check the report.'
        }
    }
}